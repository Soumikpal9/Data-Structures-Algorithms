Problem Description

Given a sorted array A of size N and a target value B, return the index (0-based indexing) if the target is found.
If not, return the index where it would be if it were inserted in order.

NOTE: You may assume no duplicates in the array. Users are expected to solve this in O(log(N)) time.



Problem Constraints

1 <= N <= 106



Input Format

First argument is an integer array A of size N.
Second argument is an integer B.



Output Format

Return an integer denoting the index of target value.



Example Input

Input 1:

A = [1, 3, 5, 6]
 B = 5
Input 2:

A = [1]
 B = 1


Example Output

Output 1:

2
Output 2:

0



Solution Approach =>

                    1. We can use Binary Search the same way and only need to care about the condition 
                        where B is not present in the array. so finally we can check if(A[mid]<B) 
                        then we can return mid+1, else we can simply return mid.

                        Time Complexity = O(logN)
                        Space Complexity = O(1)


                        